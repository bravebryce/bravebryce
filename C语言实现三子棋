#define ROW 3
#define COL 3
#include<stdio.h>
#include<time.h>
#include<stdlib.h>
void InitBoard(char board[ROW][COL], int row, int col)
{int i = 0;
int j = 0;
for (i = 0; i < row; i++){
	for (j = 0; j < col; j++){
		board[i][j] = ' ';
	}
}

}
void DisplayBoard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++){
		int j = 0;
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);
			if (j < col - 1)
			printf("|");
		}
		printf("\n");
		if (i < row - 1){
			for (j = 0; j < col; j++){
				printf("---");
				if (j < col - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}
void PlayerMove(char board[ROW][COL], int row, int col){
	int x;
	int y;
	printf("玩家走>\n");
	printf("请输入要下的坐标>\n");
	while (1){
		scanf("%d%d", &x, &y);
		//判断x，y坐标的合法性
		if (x >= 1 && x <= row&&y >= 1 && y <= col){
			if (board[x - 1][y - 1] == ' ')
			{
				board[x - 1][y - 1] = '*';
				break;
			}
			else{
				printf("该坐标已经被占用\n");
			}

		}
	else{
		printf("输入坐标非法，请重新输入");
	}
	}

}
void ComputerMove(char board[ROW][COL], int row, int col)
{printf("电脑走\n");
int x = 0;
int y = 0;
srand((unsigned)time(NULL));
x = rand()%ROW;
y = rand() % COL;
while (1)
{
	if (board[x][y] == ' ')
	{		board[x][y] = '#';
	break;
}
}


}
int IsFull(char board[ROW][COL], int row, int col){
	int i;
	int j;
	for (i = 0; i < 2; i++)
	{
		for (j = 0; j < 2; j++)
		{
			if (board[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}
char IsWin(char board[ROW][COL], int row, int col){
	int i = 0;
	for (i = 0; i < row; i++){
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][2] != ' ')
		{
			return board[i][1];
		}
	}
	int j = 0;
	for (j = 0; j < row; j++){
		if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[2][j] != ' ')
		{
			return board[1][j];
		}
	}
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[2][2] != ' ')
	{
		return board[1][1];
	}
	if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[1][1] != ' ')
	{
		return board[1][1];
	}
	if (1 == IsFull(board, ROW, COL))
	{
		return 'Q';
	}
	return 'C';
}
void menu(){
	printf("****************************\n");
	printf("*****1.play****0.return*****\n");
	printf("****************************\n"); 
}
void game(){
	char ret = 0;
	char board[ROW][COL] = {0};//创建棋盘
	InitBoard(board, ROW, COL);//初始化棋盘
	DisplayBoard(board,ROW,COL);//显示棋盘
	while (1){
		PlayerMove( board, ROW, COL );//玩家下棋
		DisplayBoard(board, ROW, COL);//显示棋盘
		ret = IsWin(board,ROW,COL);
		if (ret != 'C')
		{
			break;
		}
		ComputerMove(board, ROW, COL);//电脑下棋
		DisplayBoard(board, ROW, COL);//显示棋盘
		ret = IsWin(board,ROW,COL);
		if (ret != 'C')
		{
			break;
		}
	}
	if (ret == '*'){
		printf("玩家胜\n");
	}
	else if (ret == '#'){
		printf("电脑胜\n");
	}
	else printf("平局\n");
}
void test(){
	int input;
	srand((unsigned)time(NULL));
	do{
		menu();
		printf("请选择/n");
		scanf("%d", &input);
		switch (input){
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("输入错误\n");
			break;
		}

	} while (input);

}
int main(){
	test();
	return 0;
}
